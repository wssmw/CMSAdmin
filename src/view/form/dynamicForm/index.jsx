/** @format */

import { Alert, Button, Form, Input, message, Select } from "antd";
import React, { memo } from "react";
import { useState } from "react";

const DynamicFrom = memo(() => {
  const [tableList, setTableList] = useState([
    {
      leftValue: "station",
      centerValue: "equal",
      rightValue: "",
    },
  ]);
  /* ‰∏ãÊãâÊ°ÜÊï∞ÊçÆ */
  const SelectLeftData = [
    {
      label: "Á´ôÁÇπ",
      value: "station",
    },
    {
      label: "Ë°å‰∏ö",
      value: "industry",
    },
    {
      label: "Ê∏†ÈÅìÊù•Ê∫ê",
      value: "channel",
    },
    {
      label: "Èì∂Ë°å",
      value: "bank",
    },
  ];
  // ‰∏≠Èó¥ÂÄº
  const SelectCenterDate = [
    { label: "Á≠â‰∫é", value: "equal" },
    { label: "‰∏çÁ≠â‰∫é", value: "unequal" },
  ];
  /* Âè≥‰æßÂÄº */
  const SelectRightData = {
    station: [
      { value: "Ëä≥ÂçéË∑Ø9Âè∑" },
      { value: "Á¥´ÁëæÂõ≠Âå∫" },
      { value: "ÂòâÂπ¥ÂçéËãë" },
      { value: "‰∏≠Â±±‰∏áÂçöÂõΩÈôÖ‰∏≠ÂøÉ" },
      { value: "Âåó‰∫¨È°æÂíåÂõ≠ÂõΩÈôÖÈÖíÂ∫ó" },
    ],
    industry: [
      { value: "ÈáëËûç" },
      { value: "ÈîÄÂîÆ" },
      { value: "ÂÜõ‰∫∫" },
      { value: "ÊïôÂ∏à" },
      { value: "ÊºîÂëò" },
      { value: "ÂæãÂ∏à" },
      { value: "Â≠¶Áîü" },
    ],
    channel: [
      { value: "ÊäñÈü≥" },
      { value: "Âø´Êâã" },
      { value: "ËôéÁâô" },
      { value: "ÊñóÈ±º" },
      { value: "ÂæÆÂçö" },
      { value: "ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑" },
      { value: "Â∞èÁ∫¢‰π¶" },
      { value: "ÂìîÂì©ÂìîÂì©" },
    ],
    bank: [
      { value: "ÊãõÂïÜÈì∂Ë°å" },
      { value: "Êµ¶ÂèëÈì∂Ë°å" },
      { value: "‰∏≠‰ø°Èì∂Ë°å" },
      { value: "ÂÖâÂ§ßÈì∂Ë°å" },
      { value: "ÂçéÂ§èÈì∂Ë°å" },
      { value: "Ê∞ëÁîüÈì∂Ë°å" },
      { value: "ÂπøÂèëÈì∂Ë°å" },
      { value: "ÂÖ¥‰∏öÈì∂Ë°å" },
      { value: "Âπ≥ÂÆâÈì∂Ë°å" },
    ],
  };
  const submitHandle = () => {
    message.success(`Êèê‰∫§ÁöÑÊï∞ÊçÆ‰∏∫Ôºö${JSON.stringify(tableList)}`)
  };
  const selectHandle = (e, position, index) => {
    let s = {
      left: "leftValue",
      center: "centerValue",
      right: "rightValue",
    };
    let newTableList = [...tableList];
    console.log(newTableList[index]);
    newTableList[index][s[position]] = e;
    setTableList(newTableList);
  };
  const addHandle = () => {
    console.log("ËøôÈáåÊâßË°å");
    let newTableList = [...tableList];
    newTableList.push({
      leftValue: "station",
      centerValue: "equal",
      rightValue: "",
    });
    setTableList(newTableList);
    console.log(newTableList, tableList);
  };
  const deleteHandle = (index) => {
    let newTableList = [...tableList];
    newTableList.splice(index, 1);
    setTableList(newTableList);
  };
  return (
    <div
      style={{
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        backgroundColor: "white",
        padding: "20px",
      }}
    >
      <Alert
        style={{ width: "100%" }}
        message="ÂàÜÊ≠•Ë°®Âçïüçáüçáüçá"
        description="Â∞Ü‰∏Ä‰∏™ÂÜóÈïøÊàñÁî®Êà∑‰∏çÁÜüÊÇâÁöÑË°®Âçï‰ªªÂä°ÂàÜÊàêÂ§ö‰∏™Ê≠•È™§ÔºåÊåáÂØºÁî®Êà∑ÂÆåÊàê„ÄÇ"
        type="info"
      />
      <Form style={{ width: "50%", marginTop: "20px" }}>
        {tableList.map((item, index) => (
          <div>
            <Form.Item label="Á≠õÈÄâÊù°‰ª∂Ôºö">
              <div style={{ display: "flex" }}>
                <Select
                  style={{ margin: "0 10px", width: "120px" }}
                  value={item.leftValue}
                  onChange={(e) => selectHandle(e, "left", index)}
                  options={SelectLeftData}
                />
                <Select
                  style={{ margin: "0 10px", width: "120px" }}
                  value={item.centerValue}
                  onChange={(e) => selectHandle(e, "center", index)}
                  options={SelectCenterDate}
                />
                <Select
                  style={{ margin: "0 10px", width: "130px" }}
                  options={
                    SelectRightData[item.leftValue] ||
                    [].map((v) => ({ value: v }))
                  }
                  onChange={(e) => selectHandle(e, "right", index)}
                />
                {tableList.length!=1&&<Button onClick={e=>deleteHandle(index)}>x</Button>}
              </div>
            </Form.Item>
          </div>
        ))}
        <Form.Item>
          <Button style={{ width: "100%" }} onClick={addHandle}>
            Ê∑ªÂä†Êù°‰ª∂
          </Button>
        </Form.Item>
        <Form.Item>
          <div style={{display:'flex',justifyContent:'space-around'}}>
            <Button  onClick={submitHandle}>ÊêúÁ¥¢</Button>
          </div>
        </Form.Item>
      </Form>
    </div>
  );
});

export default DynamicFrom;
